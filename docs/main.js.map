{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/megaman2/megaman2.component.ts","./src/app/components/megaman2/megaman2.component.html","./src/app/components/password-board/password-board.component.html","./src/app/components/password-board/password-board.component.ts","./src/app/components/screen/boss-screen/boss-screen.component.ts","./src/app/components/screen/boss-screen/boss-screen.component.html","./src/app/components/screen/boss/boss.component.ts","./src/app/components/screen/boss/boss.component.html","./src/app/components/screen/e-tank/e-tank.component.ts","./src/app/components/screen/e-tank/e-tank.component.html","./src/app/components/screen/items/items.component.ts","./src/app/components/screen/items/items.component.html","./src/app/components/screen/marker/marker.component.ts","./src/app/components/screen/marker/marker.component.html","./src/app/components/screen/password-screen/password-screen.component.ts","./src/app/components/screen/password-screen/password-screen.component.html","./src/app/models/boss.model.ts","./src/app/models/coordinate.model.ts","./src/app/models/password.model.ts","./src/app/services/ascii-parser/ascii-parser.service.ts","./src/app/services/initial-state/initial-state.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<div class=\"container\">\n  <mm2-megaman2></mm2-megaman2>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { Megaman2Component } from './components/megaman2/megaman2.component';\nimport { PasswordBoardComponent } from './components/password-board/password-board.component';\nimport { PasswordScreenComponent } from './components/screen/password-screen/password-screen.component';\nimport { MarkerComponent } from './components/screen/marker/marker.component';\nimport { BossScreenComponent } from './components/screen/boss-screen/boss-screen.component';\nimport { BossComponent } from './components/screen/boss/boss.component';\nimport { ETankComponent } from './components/screen/e-tank/e-tank.component';\nimport { ItemsComponent } from './components/screen/items/items.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Megaman2Component,\n    PasswordBoardComponent,\n    PasswordScreenComponent,\n    MarkerComponent,\n    BossScreenComponent,\n    BossComponent,\n    ETankComponent,\n    ItemsComponent,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { Password } from 'src/app/models/password.model';\n\n@Component({\n  selector: 'mm2-megaman2',\n  templateUrl: './megaman2.component.html',\n  styleUrls: ['./megaman2.component.css']\n})\nexport class Megaman2Component {\n\n  password: Password;\n\n  constructor() {\n    this.password = new Password();\n  }\n\n  get passwordCoordinates(): Array<string> {\n    const coords: Array<string> = [];\n    for (let coordinate of this.password.compute) {\n      coords.push(coordinate.xy);\n    }\n    return coords;\n  }\n\n  setEtanks(etanks: number): void {\n    const isIncrement = (etanks > this.password.currentEtanks);\n    let pendingChanges = Math.abs(this.password.currentEtanks - etanks);\n    console.debug('etanks', etanks);\n    console.debug('isIncrement', isIncrement);\n    console.debug('pendingChanges', pendingChanges);\n    while (pendingChanges-- > 0) {\n      if (isIncrement) {\n        this.password.incEtanks();\n        console.debug('inc');\n      } else {\n        this.password.decEtanks();\n        console.debug('dec');\n      }\n    }\n  }\n\n}\n","<div class=\"container\">\n  <mm2-password-screen [password]=\"password\" [title]=\"passwordCoordinates\"></mm2-password-screen>\n\n  <small>\n    <a href=\"https://github.com/bugtamer/megaman2/\">Git repo</a>\n  </small>\n</div>\n","<table>\n  <tr>\n    <td class=\"hide\"></td>\n    <th>1</th>\n    <th>2</th>\n    <th>3</th>\n    <th>4</th>\n    <th>5</th>\n  </tr>\n  <tr *ngFor=\"let row of rows\">\n    <th>{{ row[0] }}</th>\n    <td>{{ row[1] }}</td>\n    <td>{{ row[2] }}</td>\n    <td>{{ row[3] }}</td>\n    <td>{{ row[4] }}</td>\n    <td>{{ row[5] }}</td>\n  </tr>\n</table>","import { Component, Input } from '@angular/core';\nimport { Coordinate as xy } from 'src/app/models/coordinate.model';\n\n@Component({\n  selector: 'mm2-password-board',\n  templateUrl: './password-board.component.html',\n  styleUrls: ['./password-board.component.css']\n})\nexport class PasswordBoardComponent {\n\n  @Input()\n  data: Array<xy> = [];\n\n  get rows(): any {\n    const rows = [];\n    for (let x of this.rowHeader) {\n      const newRow = [x];\n      for (let y of this.colHeader) {\n        const marker = this.getMarker(x, y);\n        newRow.push(marker);\n      }\n      rows.push(newRow);\n    }\n    return rows;\n  }\n\n  // LOWER LEVEL IMPLEMENTATION DETAILS\n\n  private getMarker(x: string, y: string): string {\n    const target = `${x}${y}`;\n    const wasFound = this.data.find(candidate => candidate.xy === target);\n    return wasFound ? '●' : '';\n  }\n\n  private get colHeader(): Array<string> {\n    return ['1', '2', '3', '4', '5'];\n  }\n\n  private get rowHeader(): Array<string> {\n    return ['A', 'B', 'C', 'D', 'E'];\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { Password } from 'src/app/models/password.model';\n\n@Component({\n  selector: 'mm2-boss-screen',\n  templateUrl: './boss-screen.component.html',\n  styleUrls: ['./boss-screen.component.css']\n})\nexport class BossScreenComponent {\n\n  @Input()\n  password: Password;\n\n}\n","<div class=\"screen\">\n  <mm2-boss class=\"boss\" x=\"112\" y=\"31\"  (change)=\"password.airman   .toggleIsDefeated()\" [boss]=\"password.airman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"48\"  y=\"31\"  (change)=\"password.bubbleman.toggleIsDefeated()\" [boss]=\"password.bubbleman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"176\" y=\"159\" (change)=\"password.crashman .toggleIsDefeated()\" [boss]=\"password.crashman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"112\" y=\"159\" (change)=\"password.flashman .toggleIsDefeated()\" [boss]=\"password.flashman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"48\"  y=\"95\"  (change)=\"password.heatman  .toggleIsDefeated()\" [boss]=\"password.heatman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"48\"  y=\"159\" (change)=\"password.metalman .toggleIsDefeated()\" [boss]=\"password.metalman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"176\" y=\"23\"  (change)=\"password.quickman .toggleIsDefeated()\" [boss]=\"password.quickman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"176\" y=\"95\"  (change)=\"password.woodman  .toggleIsDefeated()\" [boss]=\"password.woodman\"></mm2-boss>\n</div>\n","import { Component, AfterViewInit, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { Boss } from 'src/app/models/boss.model';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'mm2-boss',\n  templateUrl: './boss.component.html',\n  styleUrls: ['./boss.component.css']\n})\nexport class BossComponent implements AfterViewInit {\n\n  @Input()\n  boss: Boss;\n\n  @Output()\n  change: EventEmitter<any>;\n\n  @Input()\n  x: string;\n\n  @Input()\n  y: string;\n\n  @ViewChild('boss', {static: false})\n  bossRef: ElementRef<HTMLImageElement>;\n\n  // LIFE CYCLE\n\n  constructor() {\n    this.change = new EventEmitter<any>();\n  }\n\n  ngAfterViewInit(): void {\n    this.setImageXY();\n  }\n\n  get isDefeated(): boolean {\n    return this.boss.isDefeated;\n  }\n\n  get url(): string {\n    const bossName = this.boss.name.toLowerCase();\n    return environment.imageBasePath + `bosses/${bossName}.png`;\n  }\n\n  get name(): string {\n    return this.item ? `${this.boss.name} + ${this.item}` : this.boss.name;\n  }\n\n  get item(): string {\n    const item = this.boss.item[1];\n    return item ? item.substr(4, item.length) : '';\n  }\n\n  onClick(): void {\n    this.change.emit();\n  }\n\n  // LOWER LEVEL IMPLEMENTATION DETAILS\n\n  private setImageXY(): void {\n    if (this.isReady) {\n      this.bossRef.nativeElement.style.top  = this.y + 'px';\n      this.bossRef.nativeElement.style.left = this.x + 'px';\n    }\n  }\n\n  private get isReady(): boolean {\n    return this.bossRef !== undefined &&\n           this.bossRef.nativeElement !== undefined;\n  }\n\n}\n","<img\n  #boss\n  class=\"boss fade-in-out\"\n  [class.isDefeated]=\"isDefeated\"\n  [src]=\"url\"\n  [alt]=\"name\"\n  [title]=\"name\"\n  (click)=\"onClick()\">\n","import { Component, AfterViewInit, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'mm2-e-tank',\n  templateUrl: './e-tank.component.html',\n  styleUrls: ['./e-tank.component.css']\n})\nexport class ETankComponent implements AfterViewInit {\n\n  @Input()\n  etank: string;\n\n  @Input()\n  currentEtank: string;\n\n  @Input()\n  x: string;\n\n  @Input()\n  y: string;\n\n  @Output()\n  change: EventEmitter<number>;\n\n  @ViewChild('etank')\n  etankRef: ElementRef<HTMLSpanElement>\n\n  constructor() {\n    this.change = new EventEmitter<number>();\n  }\n\n  ngAfterViewInit(): void {\n    this.setImageXY();\n  }\n\n  get isNotSelected(): boolean {\n    return this.etank != this.currentEtank;\n  }\n\n  get label(): string {\n    return `${this.etank} E-tanks`;\n  }\n\n  get quantityImage(): string {\n    return environment.imageBasePath + `numbers/${this.etank}.png`;\n  }\n\n  get etankImage(): string {\n    return environment.imageBasePath + 'e.png';\n  }\n\n  onSelect(): void {\n    this.change.emit(+this.etank);\n  }\n\n  private setImageXY(): void {\n    if (this.isReady) {\n      this.etankRef.nativeElement.style.top  = this.y + 'px';\n      this.etankRef.nativeElement.style.left = this.x + 'px';\n    }\n  }\n\n  private get isReady(): boolean {\n    return this.etankRef !== undefined &&\n           this.etankRef.nativeElement !== undefined;\n  }\n}\n","<span #etank [class.fade-in-out]=\"isNotSelected\" [class.shadow]=\"isNotSelected\" (click)=\"onSelect()\">\n  <img [src]=\"quantityImage\" [alt]=\"label\" [title]=\"label\" class=\"number\">\n  <img [src]=\"etankImage\" [alt]=\"label\" [title]=\"label\">\n</span>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Password } from 'src/app/models/password.model';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'mm2-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent {\n\n  @Input()\n  password: Password;\n\n  @Output()\n  heatmanChange: EventEmitter<any>;\n\n  @Output()\n  airmanChange: EventEmitter<any>;\n\n  @Output()\n  flashmanChange: EventEmitter<any>;\n\n  constructor() {\n    this.heatmanChange  = new EventEmitter<any>();\n    this.airmanChange   = new EventEmitter<any>();\n    this.flashmanChange = new EventEmitter<any>();\n  }\n\n  onHeatmanClick(): void {\n    this.heatmanChange.emit();\n  }\n\n  onAirmanClick(): void {\n    this.airmanChange.emit();\n  }\n\n  onFlashmanClick(): void {\n    this.flashmanChange.emit();\n  }\n\n  get heatmanUrl(): string {\n    return environment.imageBasePath + 'items/item-1.png';\n  }\n\n  get airmanUrl(): string {\n    return environment.imageBasePath + 'items/item-2.png';\n  }\n\n  get flashmanUrl(): string {\n    return environment.imageBasePath + 'items/item-3.png';\n  }\n\n}\n","<img\n  style=\"left: 200px; top: 240px\"\n  class=\"item fade-in-out\"\n  [class.isNotObtained]=\"! password?.heatman?.isDefeated\"\n  [src]=\"heatmanUrl\"\n  alt=\"Heatman - Item 1\"\n  title=\"Heatman - Item 1\"\n  (click)=\"onHeatmanClick()\">\n\n<img\n  style=\"left: 232px; top: 240px\"\n  class=\"item fade-in-out\"\n  [class.isNotObtained]=\"! password?.airman?.isDefeated\"\n  [src]=\"airmanUrl\"\n  alt=\"Airman - Item 2\"\n  title=\"Airman - Item 2\"\n  (click)=\"onAirmanClick()\">\n\n<img\n  style=\"left: 272px; top: 240px\"\n  class=\"item fade-in-out\"\n  [class.isNotObtained]=\"! password?.flashman?.isDefeated\"\n  [src]=\"flashmanUrl\"\n  alt=\"Flashman - Item 3\"\n  title=\"Flashman - Item 3\"\n  (click)=\"onFlashmanClick()\">\n","import { Component, Input, ViewChild, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { Coordinate } from 'src/app/models/coordinate.model';\nimport { environment } from 'src/environments/environment';\n\nconst IMAGE_X_OFFSET = 173;\nconst IMAGE_Y_OFFSET =  69;\nconst SEPARATION     =  16;\nconst A_CHAR_CODE    =  65;\n\n@Component({\n  selector: 'mm2-marker',\n  templateUrl: './marker.component.html',\n  styleUrls: ['./marker.component.css']\n})\nexport class MarkerComponent implements OnChanges {\n\n  @Input()\n  xy: Coordinate;\n\n  @ViewChild('marker')\n  markerRef: ElementRef<HTMLImageElement>;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.putMarker();\n  }\n\n  get url(): string {\n    return environment.imageBasePath + 'marker.png';\n  }\n\n  // LOWER LEVEL IMPLEMENTATION DETAILS\n\n  private putMarker(): void {\n    if (this.isReady) {\n      this.markerRef.nativeElement.style.top  = `${this.x}px`;\n      this.markerRef.nativeElement.style.left = `${this.y}px`;\n    }\n  }\n\n  private get x(): number {\n    const x = this.xy.x.charCodeAt(0) - A_CHAR_CODE;\n    return IMAGE_X_OFFSET + SEPARATION * x;\n  }\n\n  private get y(): number {\n    const y = this.xy.y - 1;\n    return IMAGE_Y_OFFSET + SEPARATION * y;\n  }\n\n  private get isReady(): boolean {\n    return this.markerRef !== undefined &&\n           this.markerRef.nativeElement !== undefined;\n  }\n\n}\n","<img #marker [src]=\"url\" class=\"marker\" [alt]=\"xy.xy\" [title]=\"xy.xy\">\n","import { Component, Input } from '@angular/core';\nimport { Password } from 'src/app/models/password.model';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'mm2-password-screen',\n  templateUrl: './password-screen.component.html',\n  styleUrls: ['./password-screen.component.css']\n})\nexport class PasswordScreenComponent {\n\n  @Input()\n  password: Password;\n\n  setEtanks(etanks: number): void {\n    const isIncrement = (etanks > this.password.currentEtanks);\n    let pendingChanges = Math.abs(this.password.currentEtanks - etanks);\n    while (pendingChanges-- > 0) {\n      if (isIncrement) {\n        this.password.incEtanks();\n      } else {\n        this.password.decEtanks();\n      }\n    }\n  }\n\n  get url(): string {\n    return environment.imageBasePath + 'screen.png';\n  }\n\n}\n","<div  class=\"screen\">\n  <img [src]=\"url\" alt=\"\">\n  <mm2-marker [xy]=\"password.etanks.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.airman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.bubbleman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.crashman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.flashman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.heatman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.metalman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.quickman.xy.clone()\"></mm2-marker>\n  <mm2-marker [xy]=\"password.woodman.xy.clone()\"></mm2-marker>\n\n  <mm2-boss class=\"boss\" x=\"118\" y=\"318\" (change)=\"password.airman   .toggleIsDefeated()\" [boss]=\"password.airman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"54\"  y=\"318\" (change)=\"password.bubbleman.toggleIsDefeated()\" [boss]=\"password.bubbleman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"246\" y=\"398\" (change)=\"password.crashman .toggleIsDefeated()\" [boss]=\"password.crashman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"182\" y=\"398\" (change)=\"password.flashman .toggleIsDefeated()\" [boss]=\"password.flashman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"246\" y=\"318\" (change)=\"password.heatman  .toggleIsDefeated()\" [boss]=\"password.heatman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"118\" y=\"398\" (change)=\"password.metalman .toggleIsDefeated()\" [boss]=\"password.metalman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"182\" y=\"310\" (change)=\"password.quickman .toggleIsDefeated()\" [boss]=\"password.quickman\"></mm2-boss>\n  <mm2-boss class=\"boss\" x=\"54\"  y=\"398\" (change)=\"password.woodman  .toggleIsDefeated()\" [boss]=\"password.woodman\"></mm2-boss>\n  \n  <mm2-e-tank etank=\"0\" x=\"212\" y=\"140\" [currentEtank]=\"password.currentEtanks\" (change)=\"setEtanks($event)\"></mm2-e-tank>\n  <mm2-e-tank etank=\"1\" x=\"244\" y=\"140\" [currentEtank]=\"password.currentEtanks\" (change)=\"setEtanks($event)\"></mm2-e-tank>\n  <mm2-e-tank etank=\"2\" x=\"196\" y=\"164\" [currentEtank]=\"password.currentEtanks\" (change)=\"setEtanks($event)\"></mm2-e-tank>\n  <mm2-e-tank etank=\"3\" x=\"228\" y=\"164\" [currentEtank]=\"password.currentEtanks\" (change)=\"setEtanks($event)\"></mm2-e-tank>\n  <mm2-e-tank etank=\"4\" x=\"258\" y=\"164\" [currentEtank]=\"password.currentEtanks\" (change)=\"setEtanks($event)\"></mm2-e-tank>\n\n  <mm2-items\n    [password]=\"password\"\n     (heatmanChange)=\"password.heatman .toggleIsDefeated()\"\n      (airmanChange)=\"password.airman  .toggleIsDefeated()\"\n    (flashmanChange)=\"password.flashman.toggleIsDefeated()\"\n  ></mm2-items>\n</div>\n","import { Coordinate as xy } from './coordinate.model';\n\ntype bossname = 'Airman' | 'Bubbleman' | 'Crashman' | 'Flashman' | 'Heatman' | 'Metalman' | 'Quickman' | 'Woodman';\n\nexport class Boss {\n\n  public isDefeated: boolean;\n  public  readonly name:  bossname;\n  public  readonly item:  Array<string>;\n  private readonly alive: xy;\n  private readonly dead:  xy;\n\n  constructor(name: bossname, alive: xy, dead: xy, item: Array<string>) {\n    this.isDefeated = false;\n    this.name  = name;\n    this.alive = alive;\n    this.dead  = dead;\n    this.item  = item;\n  }\n\n  nextCoordinate(): void {\n    this.alive.next();\n    this.dead .next();\n  }\n\n  previousCoordinate(): void {\n    this.alive.previous();\n    this.dead .previous();\n  }\n\n  toggleIsDefeated(): void {\n    this.isDefeated = !this.isDefeated;\n  }\n\n  get index(): number {\n    return this.xy.toIndex;\n  }\n\n  get xy(): xy {\n    return this.isDefeated ? this.dead : this.alive;\n  }\n\n}\n","import { Injector } from '@angular/core';\nimport { AsciiParserService } from '../services/ascii-parser/ascii-parser.service';\n\nconst INJECTOR = Injector.create({providers: [{provide: AsciiParserService, deps: []}]});\n\nexport type AsciiDecimalCode = number;\n\nexport type XRange = 'A' | 'B' | 'C' | 'D' | 'E';\nexport type YRange =  1  |  2  |  3  |  4  |  5;\n\nexport class Coordinate {\n\n  public static readonly Y_MIN = 1;\n  public static readonly Y_MAX = 5;\n\n  private xCharCode: AsciiDecimalCode;\n  private yCharCode: AsciiDecimalCode;\n  private parser:    AsciiParserService;\n\n  constructor(x: XRange, y: YRange) {\n    this.parser    = INJECTOR.get(AsciiParserService);\n    this.xCharCode = this.parser.letterToCharCode(x);\n    this.yCharCode = this.parser.numberToCharCode(y);\n  }\n\n  get xy(): string { return String.fromCharCode(this.xCharCode, this.yCharCode); }\n  get x():  string { return String.fromCharCode(this.xCharCode); }\n  get y():  number { return this.parser.numberCharCodeToNumber(this.yCharCode); }\n\n  get toIndex(): number {\n    const x = this.parser.numberCharCodeToNumber(this.xCharCode);\n    const y = this.parser.letterCharCodeToNumber(this.yCharCode);\n    const rowNumber = this.parser.numberCharCodeToNumber(this.xLastRowCharCode);\n    return rowNumber * y + x;\n  }\n\n  next(): void {\n    if (this.isEtankUpperLimit) {\n      this.yCharCode = this.yFirstColumCharCode;\n      return;\n    }\n    if (this.isBossUpperLimit) {\n      this.xCharCode = this.xSecondRowCharCode;\n      this.yCharCode = this.yFirstColumCharCode;\n      return;\n    }\n    if (this.isLastColumn) {\n      this.xCharCode++;\n      this.yCharCode = this.yFirstColumCharCode;\n    } else {\n      this.yCharCode++;\n    }\n  }\n\n  previous(): void {\n    if (this.isEtankLowerLimit) {\n      this.yCharCode = this.yLastColumCharCode;\n      return;\n    }\n    if (this.isBossLowerLimit) {\n      this.xCharCode = this.xLastRowCharCode;\n      this.yCharCode = this.yLastColumCharCode;\n      return;\n    }\n    if (this.isFirstColumn) {\n      this.xCharCode--;\n      this.yCharCode = this.yLastColumCharCode;\n    } else {\n      this.yCharCode--;\n    }\n  }\n\n  clone(): Coordinate {\n    const x = <XRange> this.x;\n    const y = <YRange> this.y;\n    return new Coordinate(x, y);\n  }\n\n  // LOWER LEVEL IMPLEMENTATION DETAILS\n\n  private get isEtankLowerLimit(): boolean { return this.isFirstRow && this.isFirstColumn; }\n  private get isEtankUpperLimit(): boolean { return this.isFirstRow && this.isLastColumn;  }\n\n  private get isBossLowerLimit(): boolean { return this.isSecondRow && this.isFirstColumn; }\n  private get isBossUpperLimit(): boolean { return this.isLastRow   && this.isLastColumn;  }\n\n  private get isFirstRow():  boolean { return this.xCharCode === this.xFirstRowCharCode;  }\n  private get isSecondRow(): boolean { return this.xCharCode === this.xSecondRowCharCode; }\n  private get isLastRow():   boolean { return this.xCharCode === this.xLastRowCharCode;   }\n\n  private get isFirstColumn(): boolean { return this.yCharCode === this.yFirstColumCharCode; }\n  private get isLastColumn():  boolean { return this.yCharCode === this.yLastColumCharCode;  }\n\n  private get xFirstRowCharCode():  AsciiDecimalCode { return this.parser.letterToCharCode('A'); }\n  private get xSecondRowCharCode(): AsciiDecimalCode { return this.parser.letterToCharCode('B'); }\n  private get xLastRowCharCode():   AsciiDecimalCode { return this.parser.letterToCharCode('E'); }\n\n  private get yFirstColumCharCode(): AsciiDecimalCode { return this.parser.numberToCharCode(Coordinate.Y_MIN); }\n  private get yLastColumCharCode():  AsciiDecimalCode { return this.parser.numberToCharCode(Coordinate.Y_MAX); }\n\n}\n","import { Injector } from '@angular/core';\nimport { InitialStateService } from '../services/initial-state/initial-state.service';\nimport { Coordinate as xy } from './coordinate.model';\nimport { Boss } from './boss.model';\n\nconst INJECTOR = Injector.create({providers: [{provide: InitialStateService, deps: []}]});\n\nexport class Password {\n\n  private initialState: InitialStateService = INJECTOR.get(InitialStateService);\n\n  readonly etanks    : xy   = this.initialState.etanks();\n  readonly airman    : Boss = this.initialState.airman();\n  readonly bubbleman : Boss = this.initialState.bubbleman();\n  readonly crashman  : Boss = this.initialState.crashman();\n  readonly flashman  : Boss = this.initialState.flashman()\n  readonly heatman   : Boss = this.initialState.heatman();\n  readonly metalman  : Boss = this.initialState.metalman();\n  readonly quickman  : Boss = this.initialState.quickman();\n  readonly woodman   : Boss = this.initialState.woodman();\n\n  get compute(): Array<xy> {\n    const cartesianCoordinates: Array<xy> = [ this.etanks ];\n    for (let boss of this.bosses) {\n      cartesianCoordinates.push(boss.xy);\n    }\n    return cartesianCoordinates;\n  }\n\n  incEtanks(): void {\n    if (this.etanks.y < xy.Y_MAX) {\n      this.etanks.next();\n      for (let boss of this.bosses) {\n        boss.nextCoordinate();\n      }\n    }\n  }\n\n  decEtanks(): void {\n    if (this.etanks.y > xy.Y_MIN) {\n      this.etanks.previous();\n      for (let boss of this.bosses) {\n        boss.previousCoordinate();\n      }\n    }\n  }\n\n  get currentEtanks(): number {\n    const yOffset = 1;\n    return this.etanks.y - yOffset;\n  }\n\n  get bosses(): Array<Boss> {\n    const bosses: Array<Boss> = [];\n    bosses.push( this.bubbleman );\n    bosses.push( this.heatman   );\n    bosses.push( this.airman    );\n    bosses.push( this.woodman   );\n    bosses.push( this.quickman  );\n    bosses.push( this.flashman  );\n    bosses.push( this.crashman  );\n    bosses.push( this.metalman  );\n    return bosses;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AsciiDecimalCode } from 'src/app/models/coordinate.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AsciiParserService {\n\n  numberCharCodeToNumber(number: AsciiDecimalCode) :number {\n    const numberOffset = this.numberToCharCode(0);\n    return number - numberOffset;\n  }\n\n  letterCharCodeToNumber(letter: AsciiDecimalCode) :number {\n    const letterOffset = this.letterToCharCode('A') - 1;\n   return letter - letterOffset;\n  }\n\n  numberToCharCode(singleDigit: number): AsciiDecimalCode {\n    return this.letterToCharCode( `${singleDigit}` );\n  }\n\n  letterToCharCode(singleLetter: string): AsciiDecimalCode {\n    const firstChar = 0;\n    return singleLetter.charCodeAt(firstChar);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Coordinate as xy } from 'src/app/models/coordinate.model';\nimport { Boss } from 'src/app/models/boss.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitialStateService {\n\n  public etanks(): xy {\n    return new xy('A', 1);\n  }\n\n  public airman(): Boss {\n    const alive = new xy('D', 2);\n    const dead  = new xy('E', 3);\n    const item  = ['(A) Airman', '(2) Item-2'];\n    return new Boss('Airman', alive, dead, item);\n  }\n\n  public bubbleman(): Boss {\n    const alive = new xy('C', 3);\n    const dead  = new xy('D', 1);\n    const item  = ['(B) Bubbleman'];\n    return new Boss('Bubbleman', alive, dead, item);\n  }\n\n  public crashman(): Boss {\n    const alive = new xy('E', 2);\n    const dead  = new xy('C', 5);\n    const item  = ['(C) Crashman'];\n    return new Boss('Crashman', alive, dead, item);\n  }\n\n  public flashman(): Boss {\n    const alive = new xy('E', 4);\n    const dead  = new xy('C', 1);\n    const item  = ['(F) Flashman', '(3) Item-3'];\n    return new Boss('Flashman', alive, dead, item);\n  }\n\n  public heatman(): Boss {\n    const alive = new xy('D', 5);\n    const dead  = new xy('B', 2);\n    const item  = ['(H) Heatman', '(1) Item-1'];\n    return new Boss('Heatman', alive, dead, item);\n  }\n\n  public metalman(): Boss {\n    const alive = new xy('E', 1);\n    const dead  = new xy('E', 5);\n    const item  = ['(M) Metalman'];\n    return new Boss('Metalman', alive, dead, item);\n  }\n\n  public quickman(): Boss {\n    const alive = new xy('C', 4);\n    const dead  = new xy('B', 4);\n    const item  = ['(Q) Quickman'];\n    return new Boss('Quickman', alive, dead, item);\n  }\n\n  public woodman(): Boss {\n    const alive = new xy('B', 5);\n    const dead  = new xy('D', 3);\n    const item  = ['(W) Woodman'];\n    return new Boss('Woodman', alive, dead, item);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  imageBasePath: 'assets/img/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","selectors","decls","vars","consts","template","i0","BrowserModule","Megaman2Component","PasswordBoardComponent","PasswordScreenComponent","MarkerComponent","BossScreenComponent","BossComponent","ETankComponent","ItemsComponent","AppModule","bootstrap","declarations","imports","Password","constructor","password","passwordCoordinates","coords","coordinate","compute","push","xy","setEtanks","etanks","isIncrement","currentEtanks","pendingChanges","Math","abs","console","debug","incEtanks","decEtanks","rows","x","rowHeader","newRow","y","colHeader","marker","getMarker","target","wasFound","data","find","candidate","inputs","ctx","EventEmitter","environment","change","ngAfterViewInit","setImageXY","isDefeated","boss","url","bossName","name","toLowerCase","imageBasePath","item","substr","length","onClick","emit","isReady","bossRef","nativeElement","style","top","left","undefined","viewQuery","isNotSelected","etank","currentEtank","label","quantityImage","etankImage","onSelect","etankRef","heatmanChange","airmanChange","flashmanChange","onHeatmanClick","onAirmanClick","onFlashmanClick","heatmanUrl","airmanUrl","flashmanUrl","outputs","IMAGE_X_OFFSET","IMAGE_Y_OFFSET","SEPARATION","A_CHAR_CODE","ngOnChanges","changes","putMarker","markerRef","charCodeAt","Boss","alive","dead","nextCoordinate","next","previousCoordinate","previous","toggleIsDefeated","index","toIndex","Injector","AsciiParserService","INJECTOR","create","providers","provide","deps","Coordinate","parser","get","xCharCode","letterToCharCode","yCharCode","numberToCharCode","String","fromCharCode","numberCharCodeToNumber","letterCharCodeToNumber","rowNumber","xLastRowCharCode","isEtankUpperLimit","yFirstColumCharCode","isBossUpperLimit","xSecondRowCharCode","isLastColumn","isEtankLowerLimit","yLastColumCharCode","isBossLowerLimit","isFirstColumn","clone","isFirstRow","isSecondRow","isLastRow","xFirstRowCharCode","Y_MIN","Y_MAX","InitialStateService","initialState","airman","bubbleman","crashman","flashman","heatman","metalman","quickman","woodman","cartesianCoordinates","bosses","yOffset","number","numberOffset","letter","letterOffset","singleDigit","singleLetter","firstChar","factory","providedIn","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}